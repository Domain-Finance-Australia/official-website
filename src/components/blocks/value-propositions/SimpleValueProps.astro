---
import type { TValuePropositions } from "../../../types";
import StrapiIcon from "../../StrapiIcon.astro";
import StrapiImage from "../../StrapiImage.astro";
import Heading from "../../Heading.astro";
import Link from "../../Link.astro";

interface Props {
  block: TValuePropositions | undefined;
}

const { block } = Astro.props;

if (!block) return null;
---

<div class="flex flex-wrap-reverse justify-evenly gap-10">
  {
    block?.image && (
      <StrapiImage
        src={block.image.url}
        alt={block.image.alternativeText}
        width={400}
        height={450}
        class="object-cover rounded-2xl hidden md:block"
      />
    )
  }
  <div>
    <Heading level={3} class="mb-3">{block.heading}</Heading>
    <p class="mb-10">{block.subHeading}</p>
    <div class="grid grid-cols-1 lg:grid-cols-2 grid-flow-row gap-5 h-fit">
      {
        block.benefits.map((benefit) => (
          <div class="border-domain-dark border-3 rounded-full  relative py-1.5 px-12 h-fit mb-5">
            <StrapiIcon
              src={benefit.icon.url}
              width={40}
              height={40}
              class="absolute left-1 top-0"
            />
            <Heading level={6} class="text-center">
              {benefit.title}
            </Heading>
          </div>
        ))
      }
    </div>
    <div class="w-full flex justify-evenly mt-5">
      {block.cta && <Link class="w-fit" {...block.cta} />}
    </div>
  </div>
</div>
