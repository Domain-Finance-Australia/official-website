---
import type { LinkStyles } from "../types";

interface Props {
  class?: string;
  href: string;
  label: string;
  isExternal: boolean;
  isButtonLink: boolean;
  style: LinkStyles;
}

const {
  class: className,
  href,
  label,
  isExternal,
  isButtonLink,
  style,
} = Astro.props;

const buttonStyleVariants = {
  PRIMARY:
    "py-3 px-7 rounded-full flex justify-center items-center bg-white text-domain-dark hover:bg-[#e3e3e3]",
  SECONDARY:
    "py-3 px-7 rounded-full flex justify-center items-center bg-linear-65 from-domain-dark to-domain-regular text-white hover:opacity-80",
};

let buttonStyle;

if (style === "PRIMARY" && isButtonLink) {
  buttonStyle = buttonStyleVariants.PRIMARY;
} else if (style === "SECONDARY" && isButtonLink) {
  buttonStyle = buttonStyleVariants.SECONDARY;
} else {
  buttonStyle = "";
}

const linkTarget = isExternal ? "_blank" : "_self";
---

<a
  href={href}
  target={linkTarget}
  class:list={["cursor-pointer font-semibold relative", className, buttonStyle]}
>
  {label}
</a>
